name: 'Next.js visual-regression → PDF'
author: 'Cdaprod'
description: >
  Visual regression PDF generator that crawls a Docker-built Next.js app.

inputs:
  context:
    description: 'Docker build context for the app'
    default: '.'
  dockerfile:
    description: 'Dockerfile within the context'
    default: 'Dockerfile'
  port:
    description: 'Port exposed by the container and crawler'
    default: '3000'
  keep:
    description: 'How many historical PDFs to keep'
    default: '5'
  output_dir:
    description: 'Folder (inside repo) to store PDFs'
    default: 'docs/visual-regression'
  depth:
    description: 'Crawler link depth (0 = only /)'
    default: '2'
  commit:
    description: 'Commit/push generated PDFs back to the repo'
    default: 'true'

runs:
  using: 'composite'
  steps:
    - name: 🔧 Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    - name: 📦 Install action deps
      run: npm install --omit=dev --no-save
      shell: bash
    - name: 🏗️ Build image
      run: |
        docker build -t visreg-app -f ${{ inputs.context }}/${{ inputs.dockerfile }} ${{ inputs.context }}
      shell: bash
    - name: 🚀 Run container
      run: |
        docker rm -f visreg-run 2>/dev/null || true
        docker run -d --rm -p ${{ inputs.port }}:${{ inputs.port }} --name visreg-run visreg-app
        npx wait-port ${{ inputs.port }}
      shell: bash
    - name: 📸 Crawl & render PDF
      run: |
        node ${{ github.action_path }}/scripts/crawl2pdf.mjs \
             http://localhost:${{ inputs.port }} \
             ${{ inputs.depth }} \
             visreg.pdf
      shell: bash
    - name: 🛑 Stop container
      if: always()
      run: docker stop visreg-run
      shell: bash
    - name: 🗄️ Move & prune
      run: |
        set -e
        mkdir -p ${{ inputs.output_dir }}
        cp visreg.pdf ${{ inputs.output_dir }}/${{ github.sha }}.pdf
        cd ${{ inputs.output_dir }}
        ls -t *.pdf | tail -n +$((${{ inputs.keep }}+1)) | xargs -r git rm -f --
      shell: bash
    - name: 📬 Commit
      if: ${{ inputs.commit == 'true' }}
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        git config user.name 'visreg-bot'
        git config user.email 'visreg-bot@users.noreply.github.com'
        git add ${{ inputs.output_dir }}
        if git diff --cached --quiet; then
          echo 'nothing to commit'
        else
          git commit -m "chore(visreg): update PDF for ${{ github.sha }}"
          git push "https://${GH_TOKEN}@github.com/${{ github.repository }}.git" HEAD:${{ github.ref_name }}
        fi
      shell: bash

